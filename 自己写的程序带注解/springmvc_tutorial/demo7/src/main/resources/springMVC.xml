<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           https://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/mvc
           https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--扫描组件-->
    <context:component-scan base-package="org.zgg.mvc"/>

    <!--配置Thymeleaf视图解析器-->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--必须通过文件解析器的解析才能将文件转换为MultipartFile对象-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

    <!--配置视图控制器-->
    <mvc:view-controller path="/" view-name="index"/>

    <!--开放对静态资源的访问-->
    <mvc:default-servlet-handler />

    <!--开启mvc注解驱动-->
    <mvc:annotation-driven />

    <!--配置拦截器-->
    <mvc:interceptors>
        <ref bean="firstInterceptor"/>
        <ref bean="secondInterceptor"/>
<!--        <bean class="org.zgg.mvc.interceptor.FirstInterceptor"/>-->
<!--        <ref bean="firstInterceptor"/>-->
        <!-- 以上两种配置方式都是对DispatcherServlet所处理的所有的请求进行拦截 -->
<!--        自定义拦截规则-->
<!--        <mvc:interceptor>-->
<!--            &lt;!&ndash; 通过 mvc:mapping 设置需要拦截的请求，-->
<!--            通过 mvc:exclude-mapping 设置需要排除的请求，即不需要拦截的请求 &ndash;&gt;-->
<!--&lt;!&ndash;            拦截所有 &ndash;&gt;-->
<!--            <mvc:mapping path="/**"/>-->
<!--&lt;!&ndash;            排除 / &ndash;&gt;-->
<!--            <mvc:exclude-mapping path="/"/>-->
<!--            <ref bean="firstInterceptor"/>-->
<!--        </mvc:interceptor>-->
    </mvc:interceptors>

<!--    基于配置的异常处理-->
<!--    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
<!--        &lt;!&ndash;-->
<!--        properties的键表示处理器方法执行过程中出现的异常-->
<!--        properties的值表示若出现指定异常时，设置一个新的视图名称，跳转到指定页面-->
<!--        &ndash;&gt;-->
<!--        <property name="exceptionMappings">-->
<!--            <props>-->
<!--                <prop key="java.lang.ArithmeticException">error</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--&lt;!&ndash;        设置将异常信息共享在请求域中的键&ndash;&gt;-->
<!--        <property name="exceptionAttribute" value="ex"/>-->
<!--    </bean>-->
</beans>